<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>힐링K 축제 위젯 (API 연동)</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        
        .festival-widget {
            max-width: 450px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 20px;
            padding: 20px;
            color: white;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            box-shadow: 0 10px 30px rgba(0,0,0,0.25);
            margin: 20px auto;
        }
        
        .widget-header { text-align: center; margin-bottom: 20px; }
        .widget-title { font-size: 1.4rem; font-weight: 700; margin-bottom: 5px; }
        .widget-subtitle { font-size: 0.9rem; opacity: 0.9; }
        
        .festival-tabs { display: flex; background: rgba(255,255,255,0.1); border-radius: 10px; padding: 4px; margin-bottom: 15px; }
        .tab-btn { flex: 1; background: none; border: none; color: white; padding: 8px 12px; border-radius: 8px; cursor: pointer; font-size: 0.8rem; font-weight: 500; transition: all 0.3s ease; }
        .tab-btn.active { background: rgba(255,255,255,0.25); font-weight: 700; box-shadow: 0 2px 5px rgba(0,0,0,0.1); }
        
        #festival-content { min-height: 100px; }
        .festival-list { max-height: 320px; overflow-y: auto; padding-right: 5px; }
        
        .festival-item {
            background: rgba(255,255,255,0.1);
            border-radius: 10px;
            padding: 12px 15px;
            margin-bottom: 10px;
            transition: all 0.3s ease;
            border-left: 3px solid transparent;
        }
        .festival-item:hover { background: rgba(255,255,255,0.18); transform: translateX(3px); border-left-color: rgba(255,255,255,0.5); }
        
        .festival-header { display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 6px; }
        .festival-title-link { font-size: 0.95rem; font-weight: 600; flex: 1; margin-right: 10px; line-height: 1.3; color: white; text-decoration: none;}
        .festival-title-link:hover { text-decoration: underline; }

        .festival-status { background: rgba(0,0,0,0.2); color: white; padding: 3px 8px; border-radius: 15px; font-size: 0.7rem; font-weight: 500; white-space: nowrap; box-shadow: 0 1px 2px rgba(0,0,0,0.1); }
        .festival-status.ongoing { background: #2ecc71; }
        .festival-status.upcoming { background: #3498db; }
        .festival-status.weekend { background: #f1c40f; color: #333; }
        .festival-status.past { background: #95a5a6; }
        
        .festival-details { font-size: 0.8rem; opacity: 0.9; display: flex; justify-content: space-between; align-items: center; margin-top: 4px; }
        .festival-location { flex: 1; display: flex; align-items: center; }
        .festival-location::before { content: '📍'; margin-right: 5px; font-size: 0.9em; }
        .festival-date { font-size: 0.75rem; opacity: 0.85; font-weight: 500; }

        .festival-extras {
            margin-top: 8px;
            padding-top: 8px;
            border-top: 1px solid rgba(255,255,255,0.15);
            font-size: 0.75rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .festival-weather-info span { /* 클래스명 변경 */
            display: flex;
            align-items: center;
        }
        .festival-weather-info .weather-icon {
            font-size: 1.1em; 
            margin-right: 5px;
        }
        .official-link a {
            color: #e0e7ff; 
            text-decoration: none;
            font-weight: 500;
            padding: 3px 7px;
            border-radius: 5px;
            background-color: rgba(0,0,0,0.15);
            transition: background-color 0.2s ease;
        }
        .official-link a:hover {
            background-color: rgba(0,0,0,0.3);
            text-decoration: underline;
        }
        
        .festival-stats { background: rgba(255,255,255,0.1); border-radius: 10px; padding: 12px 15px; margin-top: 20px; font-size: 0.85rem; }
        .stats-row { display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px; padding-bottom: 8px; border-bottom: 1px solid rgba(255,255,255,0.1); }
        .stats-row:last-child { margin-bottom: 0; padding-bottom: 0; border-bottom: none; }
        .stats-row span:first-child { opacity: 0.9; }
        .stats-row span:last-child { font-weight: 600; }
        
        .widget-footer { text-align: center; margin-top: 20px; font-size: 0.75rem; opacity: 0.8; }
        .widget-footer span[onclick] { text-decoration: underline; font-weight: 500; }
        
        .loading, .no-festivals { text-align: center; padding: 30px 20px; font-size: 0.95rem; opacity: 0.85; font-weight: 500; }
        
        .festival-list::-webkit-scrollbar { width: 5px; }
        .festival-list::-webkit-scrollbar-track { background: rgba(255,255,255,0.05); border-radius: 10px; }
        .festival-list::-webkit-scrollbar-thumb { background: rgba(255,255,255,0.35); border-radius: 10px; }
        .festival-list::-webkit-scrollbar-thumb:hover { background: rgba(255,255,255,0.5); }
    </style>
</head>
<body>
    <div class="festival-widget">
        <div class="widget-header">
            <div class="widget-title">🎉 대한민국 축제 정보</div>
            <div class="widget-subtitle">오늘의 축제와 날씨를 한눈에!</div>
        </div>
        
        <div class="festival-tabs">
            <button class="tab-btn active" data-tab="ongoing">진행중</button>
            <button class="tab-btn" data-tab="weekend">주말 예정</button>
            <button class="tab-btn" data-tab="upcoming">전체 예정</button>
        </div>
        
        <div id="festival-content">
            <div class="loading">축제 정보를 불러오는 중입니다...</div>
        </div>
        
        <div class="festival-stats" id="festival-stats-display" style="display: none;">
            <div class="stats-row">
                <span>🎉 전체 축제 수 (예정 포함)</span>
                <span id="total-count">-</span>
            </div>
            <div class="stats-row">
                <span>🔥 현재 진행중</span>
                <span id="ongoing-count">-</span>
            </div>
            <div class="stats-row">
                <span>🌟 가장 인기있는 지역</span>
                <span id="popular-region">-</span>
            </div>
        </div>
        
        <div class="widget-footer">
            <span id="update-time">업데이트: 정보 없음</span> • 
            <span onclick="refreshFestival()" style="cursor: pointer;">새로고침</span>
        </div>
    </div>

    <script>
        let currentTab = 'ongoing';
        let rawFestivalData = []; 

        // --- API URL 정의 ---
        // !!! 중요: 실제 API 엔드포인트 URL로 변경해주세요 !!!
        // 예시: const FESTIVALS_API_URL = 'https://healingk.vercel.app/api/festivals';
        // 예시: const WEATHER_API_URL = 'https://healingk.vercel.app/api/weather'; 
        const FESTIVALS_API_URL = '/api/festivals'; // 축제 정보 API (상대 경로 가정)
        const WEATHER_API_URL = '/api/weather';   // 날씨 정보 API (상대 경로 가정)
        // --- API URL 정의 끝 ---

        document.addEventListener('DOMContentLoaded', function() {
            loadFestivalData();
            setupTabs();
            setInterval(loadFestivalData, 10 * 60 * 1000); 
        });
        
        function setupTabs() {
            document.querySelectorAll('.tab-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    document.querySelectorAll('.tab-btn').forEach(b => b.classList.remove('active'));
                    this.classList.add('active');
                    currentTab = this.dataset.tab;
                    renderFestivals();
                });
            });
        }
        
        async function loadFestivalData() {
            const festivalContentEl = document.getElementById('festival-content');
            if (document.querySelector('.festival-list')) { 
                 festivalContentEl.innerHTML = '<div class="loading">새로운 정보 확인 중...</div>';
            } else {
                 festivalContentEl.innerHTML = '<div class="loading">축제 정보 로딩 중...</div>';
            }
            
            try {
                console.log(`Fetching festivals from: ${FESTIVALS_API_URL}`);
                const response = await fetch(FESTIVALS_API_URL);
                
                if (!response.ok) {
                    throw new Error(`HTTP error! Festivals API status: ${response.status} ${response.statusText}`);
                }
                const data = await response.json();
                console.log('Fetched festival data structure:', data);

                if (data && Array.isArray(data)) {
                    rawFestivalData = data;
                } else if (data && data.success && Array.isArray(data.data)) {
                     rawFestivalData = data.data;
                } else if (data && data.items && Array.isArray(data.items)) { // 공공데이터포털 관광정보서비스 축제조회 참고
                    rawFestivalData = data.items.item.map(d => ({ // 데이터 구조 매핑 예시
                        id: d.contentid,
                        title: d.title,
                        region: d.addr1?.split(' ')[0] || '정보없음', // 주소에서 첫 단어 추출
                        location: d.addr1 || '정보없음',
                        startDate: d.eventstartdate ? `${d.eventstartdate.slice(0,4)}-${d.eventstartdate.slice(4,6)}-${d.eventstartdate.slice(6,8)}` : null,
                        endDate: d.eventenddate ? `${d.eventenddate.slice(0,4)}-${d.eventenddate.slice(4,6)}-${d.eventenddate.slice(6,8)}` : null,
                        officialLink: d.homepage || '#',
                        // 날씨는 각 항목 렌더링 시 별도 호출, region 정보는 여기서 확보
                    }));
                } else {
                    console.warn('Festival API 응답이 예상한 배열 형태가 아닙니다. 데이터 구조를 확인해주세요.');
                    rawFestivalData = [];
                }
                
                renderFestivals(); // 날씨 정보는 renderFestivals 내부에서 각 항목별로 호출
                updateStats();
                document.getElementById('update-time').textContent = `업데이트: ${new Date().toLocaleTimeString('ko-KR')}`;

            } catch (error) {
                console.error('축제 데이터 로드 오류:', error);
                showError(`축제 정보를 가져올 수 없습니다. (오류: ${error.message})`);
            }
        }

        async function fetchAndDisplayWeather(region, weatherElement) {
            if (!region || !weatherElement) return;

            const weatherIconEl = weatherElement.querySelector('.weather-icon');
            const weatherTempEl = weatherElement.querySelector('.weather-temp');
            const weatherDescEl = weatherElement.querySelector('.weather-description');

            if (!weatherIconEl || !weatherTempEl || !weatherDescEl) {
                console.warn("Weather display elements not found in:", weatherElement);
                return;
            }
            
            weatherIconEl.textContent = '⏳';
            weatherTempEl.textContent = '--°C';
            weatherDescEl.textContent = '로딩중';

            try {
                const weatherResponse = await fetch(`${WEATHER_API_URL}?region=${encodeURIComponent(region)}`);
                if (!weatherResponse.ok) {
                    throw new Error(`Weather API status: ${weatherResponse.status}`);
                }
                const weatherData = await weatherResponse.json();

                if (weatherData.success && weatherData.data) {
                    const { temperature, sky } = weatherData.data;
                    let skyIcon = '❓';
                    if (sky === '맑음') skyIcon = '☀️';
                    else if (sky === '구름많음') skyIcon = '🌥️';
                    else if (sky === '흐림') skyIcon = '☁️';
                    
                    weatherIconEl.textContent = skyIcon;
                    weatherTempEl.textContent = `${temperature}°C`;
                    weatherDescEl.textContent = sky;
                } else {
                    throw new Error(weatherData.data?.message || '날씨 정보 형식이 올바르지 않습니다.');
                }
            } catch (error) {
                console.error(`날씨 정보 로드 오류 (${region}):`, error);
                weatherIconEl.textContent = '⚠️';
                weatherTempEl.textContent = '';
                weatherDescEl.textContent = '실패';
            }
        }


        function getFestivalDynamicInfo(festival, today) {
            if (!festival.startDate) { // 필수 정보 누락 시
                return { status: 'unknown', statusText: '정보없음', dateDisplay: '날짜정보없음', startDateObj: null, endDateObj: null };
            }
            const startDate = new Date(festival.startDate);
            const endDate = festival.endDate && festival.endDate !== festival.startDate ? new Date(festival.endDate) : new Date(festival.startDate);
            endDate.setHours(23, 59, 59, 999);

            let status = 'upcoming';
            let statusText = '예정';
            let dateDisplay = `${formatDate(startDate)}`;
            if (startDate.toDateString() !== endDate.toDateString()) {
                 dateDisplay += ` ~ ${formatDate(endDate)}`;
            }

            if (startDate <= today && today <= endDate) {
                status = 'ongoing';
                statusText = '진행중';
                const diffTimeMs = endDate.getTime() - today.getTime(); // getTime() 추가
                const diffDays = Math.max(0, Math.ceil(diffTimeMs / (1000 * 60 * 60 * 24)));
                if (endDate.toDateString() === today.toDateString()) {
                    dateDisplay = '오늘까지!';
                } else {
                    dateDisplay = `${diffDays}일 남음`;
                }
            } else if (startDate > today) {
                status = 'upcoming';
                statusText = '예정';
                const diffTimeMs = startDate.getTime() - today.getTime(); // getTime() 추가
                const diffDays = Math.ceil(diffTimeMs / (1000 * 60 * 60 * 24));
                dateDisplay = `D-${diffDays}`;
                 if (startDate.toDateString() === today.toDateString()){
                     dateDisplay = "오늘 시작";
                }
            } else if (endDate < today) {
                status = 'past';
                statusText = '종료';
                dateDisplay = `종료됨 (${formatDate(endDate)})`;
            }
            return { status, statusText, dateDisplay, startDateObj: startDate, endDateObj: endDate };
        }

        function formatDate(date) {
            if (!(date instanceof Date) || isNaN(date)) return "날짜오류";
            return `${date.getMonth() + 1}월 ${date.getDate()}일`;
        }
        
        function renderFestivals() {
            const content = document.getElementById('festival-content');
             if (!rawFestivalData && !document.querySelector('.loading')) {
                content.innerHTML = '<div class="loading">데이터를 기다리는 중...</div>';
                return;
            }
            if (rawFestivalData.length === 0 && !document.querySelector('.loading')) {
                 content.innerHTML = '<div class="no-festivals">표시할 축제 정보가 없습니다.</div>';
                 return;
            }
            if (rawFestivalData.length === 0 && document.querySelector('.loading')) {
                return; 
            }

            const today = new Date();
            today.setHours(0, 0, 0, 0); 

            rawFestivalData.forEach(fest => {
                fest.dynamicInfo = getFestivalDynamicInfo(fest, today);
            });

            let festivalsToDisplay = [];
            if (currentTab === 'ongoing') {
                festivalsToDisplay = rawFestivalData.filter(f => f.dynamicInfo.status === 'ongoing');
            } else if (currentTab === 'weekend') {
                const dayOfWeek = today.getDay();
                const nextSaturday = new Date(today);
                nextSaturday.setDate(today.getDate() + ( (6 - dayOfWeek + 7) % 7 ) ); 
                const nextSunday = new Date(nextSaturday);
                nextSunday.setDate(nextSaturday.getDate() + 1);

                festivalsToDisplay = rawFestivalData.filter(f => {
                    const festStart = f.dynamicInfo.startDateObj;
                    const festEnd = f.dynamicInfo.endDateObj;
                    return festStart && festEnd && (festStart <= nextSunday && festEnd >= nextSaturday) && f.dynamicInfo.status !== 'past';
                });
            } else if (currentTab === 'upcoming') {
                festivalsToDisplay = rawFestivalData.filter(f => f.dynamicInfo.status === 'upcoming' || 
                                                              (f.dynamicInfo.status === 'ongoing' && f.dynamicInfo.startDateObj && f.dynamicInfo.startDateObj > today)
                                                             );
            }
            
            festivalsToDisplay.sort((a, b) => {
                if (!a.dynamicInfo.startDateObj || !b.dynamicInfo.startDateObj) return 0;
                return a.dynamicInfo.startDateObj - b.dynamicInfo.startDateObj;
            });

            if (festivalsToDisplay.length === 0) {
                content.innerHTML = `
                    <div class="no-festivals">
                        ${currentTab === 'ongoing' ? '현재 진행중인 축제가 없습니다.' : 
                          currentTab === 'weekend' ? '이번 주말에 예정된 축제가 없습니다.' : 
                          '예정된 축제가 없습니다.'}
                    </div>
                `;
                return;
            }
            
            const listElement = document.createElement('div');
            listElement.className = 'festival-list';

            festivalsToDisplay.slice(0, 10).forEach(festival => {
                const { status, statusText, dateDisplay } = festival.dynamicInfo;
                
                const itemElement = document.createElement('div');
                itemElement.className = 'festival-item';
                itemElement.title = `${festival.title} - ${festival.region || ''} ${festival.location || ''}`;
                itemElement.onclick = () => openFestivalDetail(festival.id);

                itemElement.innerHTML = `
                    <div class="festival-header">
                        <a href="${festival.officialLink || '#'}" target="_blank" class="festival-title-link" onclick="handleLinkClick(event, '${festival.officialLink}')">${festival.title || '제목 없음'}</a>
                        <div class="festival-status ${status}">${statusText}</div>
                    </div>
                    <div class="festival-details">
                        <div class="festival-location">${festival.region || ''} ${festival.location && festival.location.length > 12 ? festival.location.slice(0, 12) + '…' : festival.location || ''}</div>
                        <div class="festival-date">${dateDisplay}</div>
                    </div>
                    <div class="festival-extras">
                        <div class="festival-weather-info">
                            <span class="weather-icon"></span>
                            <span class="weather-temp" style="margin-left: 4px;"></span>
                            <span class="weather-description" style="margin-left: 4px; font-size: 0.9em; opacity: 0.8;"></span>
                        </div>
                        ${festival.officialLink && festival.officialLink !== '#' ? 
                            `<div class="official-link"><a href="${festival.officialLink}" target="_blank" onclick="handleLinkClick(event, '${festival.officialLink}')"><i class="fas fa-link"></i> 홈페이지</a></div>` : 
                            ''}
                    </div>
                `;
                listElement.appendChild(itemElement);
                // 각 아이템에 대해 날씨 정보 가져오기
                const weatherDisplayElement = itemElement.querySelector('.festival-weather-info');
                if (festival.region && weatherDisplayElement) {
                    fetchAndDisplayWeather(festival.region, weatherDisplayElement);
                } else if (weatherDisplayElement) {
                    weatherDisplayElement.querySelector('.weather-description').textContent = '지역정보없음';
                }
            });
            content.innerHTML = ''; // 기존 내용 지우기
            content.appendChild(listElement);
        }
        
        function handleLinkClick(event, url) {
            if (!url || url === '#') {
                event.preventDefault(); 
                console.log('공식 홈페이지 정보 없음');
            }
            event.stopPropagation(); // 부모 div의 onclick 이벤트 전파 막기
        }

        function updateStats() {
            const statsDisplay = document.getElementById('festival-stats-display');
             if (!rawFestivalData || rawFestivalData.length === 0) {
                statsDisplay.style.display = 'none';
                return;
            }
            
            const today = new Date();
            today.setHours(0, 0, 0, 0);

            let ongoingCount = 0;
            let upcomingAndWeekendCount = 0; // 주말 포함 예정

            rawFestivalData.forEach(f => {
                // dynamicInfo가 없으면 계산 (renderFestivals에서 이미 계산했을 수 있음)
                if (!f.dynamicInfo) {
                    f.dynamicInfo = getFestivalDynamicInfo(f, today);
                }
                if (f.dynamicInfo.status === 'ongoing') {
                    ongoingCount++;
                }
                if (f.dynamicInfo.status === 'upcoming' || 
                   (f.dynamicInfo.status === 'ongoing' && f.dynamicInfo.startDateObj > today) || // 오늘 이후 시작하는 진행중
                   isWeekendFestival(f, today) ) { // 주말 축제 (중복될 수 있으나, '예정' 카테고리에 포함될 수 있는 것들)
                    upcomingAndWeekendCount++;
                }
            });
            
            // '전체 축제 수'는 진행중 + (미래의 진행중 또는 예정)
            // 좀 더 명확하게는, 아직 종료되지 않은 모든 축제
            const notPastFestivals = rawFestivalData.filter(f => f.dynamicInfo.status !== 'past');
            document.getElementById('total-count').textContent = notPastFestivals.length + '개';
            document.getElementById('ongoing-count').textContent = ongoingCount + '개';
            
            const regionCounts = rawFestivalData.reduce((acc, fest) => {
                if (fest.region) { // region 정보가 있는 경우에만 카운트
                    acc[fest.region] = (acc[fest.region] || 0) + 1;
                }
                return acc;
            }, {});
            const popular = Object.entries(regionCounts).sort((a,b) => b[1] - a[1]);
            document.getElementById('popular-region').textContent = popular.length > 0 ? popular[0][0] : '정보 없음';
            
            statsDisplay.style.display = 'block';
        }

        // 주말 축제인지 판별하는 헬퍼 함수 (updateStats용)
        function isWeekendFestival(festival, today) {
            if (!festival.dynamicInfo || !festival.dynamicInfo.startDateObj || !festival.dynamicInfo.endDateObj) return false;

            const dayOfWeek = today.getDay();
            const nextSaturday = new Date(today);
            nextSaturday.setDate(today.getDate() + ((6 - dayOfWeek + 7) % 7));
            const nextSunday = new Date(nextSaturday);
            nextSunday.setDate(nextSaturday.getDate() + 1);

            const festStart = festival.dynamicInfo.startDateObj;
            const festEnd = festival.dynamicInfo.endDateObj;
            return (festStart <= nextSunday && festEnd >= nextSaturday) && festival.dynamicInfo.status !== 'past';
        }
        
        function showError(message) {
            document.getElementById('festival-content').innerHTML = `
                <div class="no-festivals" style="color: #ffdddd; background-color: rgba(0,0,0,0.2); padding: 20px; border-radius: 8px;">
                    ⚠️ ${message}
                </div>
            `;
            document.getElementById('festival-stats-display').style.display = 'none';
        }
        
        function refreshFestival() {
            loadFestivalData();
        }
        
        function openFestivalDetail(festivalId) {
            const festival = rawFestivalData.find(f => f.id === festivalId);
            if (festival) {
                // 새 창으로 공식 링크 열기 (존재하는 경우)
                if (festival.officialLink && festival.officialLink !== '#') {
                    window.open(festival.officialLink, '_blank');
                } else {
                    alert(`축제명: ${festival.title}\n지역: ${festival.region}\n(공식 홈페이지 정보 없음)`);
                }
            } else {
                alert('축제 정보를 찾을 수 없습니다.');
            }
            console.log('선택된 축제 ID:', festivalId);
        }
    </script>
</body>
</html>
